name: Scraper Canadian Tire (manuel)

on:
  workflow_dispatch:
    inputs:
      store_id:
        description: "Identifiant numérique du magasin Canadian Tire (ex.: 0271)."
        required: false
        default: '0271'
      store_slug:
        description: "Slug du magasin (ex.: saint-jerome). Laisser vide pour auto-détection."
        required: false
        default: ''
      store_city:
        description: "Ville affichée dans le fichier de sortie (ex.: Saint-Jérôme)."
        required: false
        default: ''
      store_name:
        description: "Nom du magasin à enregistrer dans les résultats."
        required: false
        default: 'Canadian Tire'
      use_playwright:
        description: "Utiliser Playwright pour charger la page (true/false)."
        required: false
        default: 'true'

jobs:
  scrape:
    name: Lancer le scraper Canadian Tire
    runs-on: ubuntu-latest
    env:
      EVENT_PLAYWRIGHT: ${{ github.event.inputs.use_playwright && toLower(github.event.inputs.use_playwright) || 'true' }}
    steps:
      - uses: actions/checkout@v4

      - name: Configurer Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Installer les dépendances Python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Préparer les variables d'environnement
        env:
          INPUT_STORE_ID: ${{ github.event.inputs.store_id }}
          INPUT_STORE_SLUG: ${{ github.event.inputs.store_slug }}
          INPUT_STORE_CITY: ${{ github.event.inputs.store_city }}
          INPUT_STORE_NAME: ${{ github.event.inputs.store_name }}
          INPUT_USE_PLAYWRIGHT: ${{ github.event.inputs.use_playwright && toLower(github.event.inputs.use_playwright) || 'true' }}
        run: |
          if [ -n "$INPUT_STORE_ID" ]; then
            echo "CANADIAN_TIRE_STORE_ID=$INPUT_STORE_ID" >> "$GITHUB_ENV"
          fi
          if [ -n "$INPUT_STORE_SLUG" ]; then
            echo "CANADIAN_TIRE_STORE_SLUG=$INPUT_STORE_SLUG" >> "$GITHUB_ENV"
          fi
          if [ -n "$INPUT_STORE_CITY" ]; then
            echo "CANADIAN_TIRE_CITY=$INPUT_STORE_CITY" >> "$GITHUB_ENV"
          fi
          if [ -n "$INPUT_STORE_NAME" ]; then
            echo "CANADIAN_TIRE_STORE_NAME=$INPUT_STORE_NAME" >> "$GITHUB_ENV"
          fi
          if [ -n "$INPUT_USE_PLAYWRIGHT" ]; then
            echo "CANADIAN_TIRE_USE_PLAYWRIGHT=$INPUT_USE_PLAYWRIGHT" >> "$GITHUB_ENV"
          fi

      - name: Installer les navigateurs Playwright
        if: ${{ env.EVENT_PLAYWRIGHT != 'false' && env.EVENT_PLAYWRIGHT != '0' && env.EVENT_PLAYWRIGHT != 'no' }}
        run: python -m playwright install --with-deps

      - name: Exécuter le scraper Canadian Tire
        env:
          ECONODEAL_API_URL: ${{ secrets.ECONODEAL_API_URL }}
          ECONODEAL_API_TOKEN: ${{ secrets.ECONODEAL_API_TOKEN }}
        run: |
          python canadian_tire_scraper.py

      - name: Publier les résultats
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update canadian tire data"
          file_pattern: |
            data/canadian-tire/*.json
            data/canadian-tire/*.csv
